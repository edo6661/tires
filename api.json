{
    "openapi": "3.1.0",
    "info": {
        "title": "Tire Storage API Documentation",
        "version": "1.0.0",
        "description": "Tire Storage Management System API Documentation. This API provides endpoints for customer management, tire storage, reservations, and administrative functions."
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/v1"
        }
    ],
    "tags": [
        {
            "name": "Public",
            "description": "Public endpoints that do not require authentication"
        },
        {
            "name": "Authentication",
            "description": "User authentication and authorization endpoints"
        },
        {
            "name": "Customer - Profile",
            "description": "Customer profile management endpoints"
        },
        {
            "name": "Customer - Booking",
            "description": "Customer booking and reservation endpoints"
        },
        {
            "name": "Customer - Dashboard",
            "description": "Customer dashboard and summary endpoints"
        },
        {
            "name": "Admin - Dashboard",
            "description": "Administrative dashboard and statistics"
        },
        {
            "name": "Admin - Customer Management",
            "description": "Administrative customer management endpoints"
        },
        {
            "name": "Admin - Booking Management",
            "description": "Administrative booking and reservation management"
        },
        {
            "name": "Admin - Content Management",
            "description": "Administrative content management (announcements, FAQ, etc.)"
        },
        {
            "name": "Admin - System Settings",
            "description": "Administrative system configuration and settings"
        }
    ],
    "security": [
        {
            "http": []
        }
    ],
    "paths": {
        "/admin/storages": {
            "get": {
                "operationId": "storages.index",
                "summary": "List semua penyimpanan ban dengan filter & pagination",
                "tags": [
                    "Admin - Booking Management",
                    "TireStorage"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve tire storages"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Tire storages retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Tire storages retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                },
                                                "cursor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "next_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "previous_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "has_next_page": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "next_cursor",
                                                        "previous_cursor",
                                                        "has_next_page",
                                                        "per_page"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data",
                                                "cursor"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "storages.store",
                "summary": "Buat penyimpanan ban",
                "tags": [
                    "Admin - Booking Management",
                    "TireStorage"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TireStorageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Gagal membuat penyimpanan ban"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Penyimpanan ban berhasil dibuat"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TireStorageResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/admin/storages/{id}": {
            "get": {
                "operationId": "storages.show",
                "summary": "Detail penyimpanan ban",
                "tags": [
                    "Admin - Booking Management",
                    "TireStorage"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Success"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TireStorageResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Data tidak ditemukan"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "storages.update",
                "summary": "Update penyimpanan ban",
                "tags": [
                    "Admin - Booking Management",
                    "TireStorage"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TireStorageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Gagal memperbarui penyimpanan ban"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Penyimpanan ban berhasil diperbarui"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TireStorageResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Data tidak ditemukan"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "storages.destroy",
                "summary": "Hapus penyimpanan ban",
                "tags": [
                    "Admin - Booking Management",
                    "TireStorage"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Gagal menghapus penyimpanan ban"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Penyimpanan ban berhasil dihapus"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Data tidak ditemukan"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/storages/{id}/end": {
            "patch": {
                "operationId": "tireStorage.end",
                "summary": "Akhiri penyimpanan ban",
                "tags": [
                    "Admin - Booking Management",
                    "TireStorage"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Penyimpanan ban berhasil diakhiri"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Data tidak ditemukan"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/storages/bulk-delete": {
            "delete": {
                "operationId": "tireStorage.bulkDelete",
                "summary": "Bulk hapus penyimpanan ban",
                "tags": [
                    "Admin - Booking Management",
                    "TireStorage"
                ],
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "string",
                                                    "enum": [
                                                        "Gagal menghapus data"
                                                    ]
                                                }
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "deleted_count": {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                }
                                            },
                                            "required": [
                                                "deleted_count",
                                                "errors"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Tidak ada data yang dipilih"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/storages/bulk-end": {
            "patch": {
                "operationId": "tireStorage.bulkEnd",
                "summary": "Bulk akhiri penyimpanan ban",
                "tags": [
                    "Admin - Booking Management",
                    "TireStorage"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "ids": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "string",
                                                    "enum": [
                                                        "Gagal mengakhiri data"
                                                    ]
                                                }
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "ended_count": {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                }
                                            },
                                            "required": [
                                                "ended_count",
                                                "errors"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Tidak ada data yang dipilih"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/reservations": {
            "get": {
                "operationId": "reservations.index",
                "summary": "Get all reservations with cursor pagination (like MenuController)",
                "tags": [
                    "Admin - Booking Management",
                    "Reservation"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 10
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Paginated response with cursor",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve reservations"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Reservations retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Reservations retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                },
                                                "cursor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "next_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "previous_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "has_next_page": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "next_cursor",
                                                        "previous_cursor",
                                                        "has_next_page",
                                                        "per_page"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data",
                                                "cursor"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "reservations.store",
                "summary": "Store a newly created reservation",
                "tags": [
                    "Admin - Booking Management",
                    "Reservation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReservationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reservation created successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ReservationResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/reservations/{id}": {
            "get": {
                "operationId": "reservations.show",
                "summary": "Display the specified reservation",
                "tags": [
                    "Admin - Booking Management",
                    "Reservation"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reservation retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ReservationResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reservation not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "reservations.update",
                "summary": "Update the specified reservation",
                "tags": [
                    "Admin - Booking Management",
                    "Reservation"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReservationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reservation updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ReservationResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reservation not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "reservations.destroy",
                "summary": "Remove the specified reservation",
                "tags": [
                    "Admin - Booking Management",
                    "Reservation"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reservation deleted successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reservation not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/reservations/{id}/confirm": {
            "patch": {
                "operationId": "reservation.confirm",
                "summary": "Confirm reservation",
                "tags": [
                    "Admin - Booking Management",
                    "Reservation"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reservation confirmed successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reservation not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/reservations/{id}/cancel": {
            "patch": {
                "operationId": "reservation.cancel",
                "summary": "Cancel reservation",
                "tags": [
                    "Admin - Booking Management",
                    "Reservation"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reservation cancelled successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reservation not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/reservations/{id}/complete": {
            "patch": {
                "operationId": "reservation.complete",
                "summary": "Complete reservation",
                "tags": [
                    "Admin - Booking Management",
                    "Reservation"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reservation completed successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reservation not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/reservations/bulk/status": {
            "patch": {
                "operationId": "reservation.bulkUpdateStatus",
                "summary": "Bulk update reservation status",
                "tags": [
                    "Admin - Booking Management",
                    "Reservation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "confirmed",
                                            "completed",
                                            "cancelled"
                                        ]
                                    },
                                    "ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "status",
                                    "ids"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Failed to update reservations"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reservations updated successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/blocked-periods": {
            "get": {
                "operationId": "blockedPeriod.index",
                "summary": "Display a listing of blocked periods",
                "tags": [
                    "Admin - Booking Management",
                    "BlockedPeriod"
                ],
                "parameters": [
                    {
                        "name": "menu_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "all_menus",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Blocked periods retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "blocked_periods": {
                                                    "type": "object"
                                                },
                                                "menus": {
                                                    "type": "object"
                                                },
                                                "filters": {
                                                    "type": "object",
                                                    "properties": {
                                                        "menu_id": {
                                                            "type": "string"
                                                        },
                                                        "start_date": {
                                                            "type": "string"
                                                        },
                                                        "end_date": {
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "type": "string"
                                                        },
                                                        "all_menus": {
                                                            "type": "string"
                                                        },
                                                        "search": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "menu_id",
                                                        "start_date",
                                                        "end_date",
                                                        "status",
                                                        "all_menus",
                                                        "search"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "blocked_periods",
                                                "menus",
                                                "filters"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "blockedPeriod.store",
                "summary": "Store a newly created blocked period",
                "tags": [
                    "Admin - Booking Management",
                    "BlockedPeriod"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BlockedPeriodRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Blocked period created successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BlockedPeriod"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/blocked-periods/check-conflict": {
            "post": {
                "operationId": "blockedPeriod.checkConflict",
                "summary": "Check for schedule conflicts",
                "tags": [
                    "Admin - Booking Management",
                    "BlockedPeriod"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "menu_id": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ]
                                    },
                                    "start_datetime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "end_datetime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "all_menus": {
                                        "type": "boolean"
                                    },
                                    "exclude_id": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "start_datetime",
                                    "end_datetime"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Conflict check completed"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "has_conflict": {
                                                    "type": "boolean"
                                                },
                                                "conflict_details": {
                                                    "type": "array",
                                                    "items": {}
                                                }
                                            },
                                            "required": [
                                                "has_conflict",
                                                "conflict_details"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/blocked-periods/calendar": {
            "get": {
                "operationId": "blockedPeriod.calendar",
                "summary": "Get calendar data",
                "tags": [
                    "Admin - Booking Management",
                    "BlockedPeriod"
                ],
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Calendar data retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "minItems": 0,
                                            "maxItems": 0,
                                            "additionalItems": false
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/blocked-periods/calendar-with-conflicts": {
            "get": {
                "operationId": "blockedPeriod.calendarWithConflicts",
                "summary": "Get calendar with conflict indicators",
                "tags": [
                    "Admin - Booking Management",
                    "BlockedPeriod"
                ],
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "menu_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "all_menus",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Calendar with conflicts retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "events": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                },
                                                "conflict_dates": {
                                                    "type": "string"
                                                },
                                                "summary": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total_periods": {
                                                            "type": "string"
                                                        },
                                                        "conflict_periods": {
                                                            "type": "string"
                                                        },
                                                        "conflict_dates_count": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "total_periods",
                                                        "conflict_periods",
                                                        "conflict_dates_count"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "events",
                                                "conflict_dates",
                                                "summary"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/blocked-periods/available-slots": {
            "get": {
                "operationId": "blockedPeriod.getAvailableSlots",
                "summary": "Get available time slots",
                "tags": [
                    "Admin - Booking Management",
                    "BlockedPeriod"
                ],
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "menu_id",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "all_menus",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Available slots retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "date": {
                                                    "type": "string"
                                                },
                                                "slots": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                },
                                                "blocked_periods": {
                                                    "type": "string"
                                                },
                                                "summary": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total_slots": {
                                                            "type": "string"
                                                        },
                                                        "available_slots": {
                                                            "type": "string"
                                                        },
                                                        "blocked_slots": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "total_slots",
                                                        "available_slots",
                                                        "blocked_slots"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "date",
                                                "slots",
                                                "blocked_periods",
                                                "summary"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/blocked-periods/batch-check-conflicts": {
            "post": {
                "operationId": "blockedPeriod.batchCheckConflicts",
                "summary": "Batch check conflicts for multiple date ranges",
                "tags": [
                    "Admin - Booking Management",
                    "BlockedPeriod"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "periods": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "menu_id": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "start_datetime": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "end_datetime": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "all_menus": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "start_datetime",
                                                "end_datetime"
                                            ]
                                        }
                                    }
                                },
                                "required": [
                                    "periods"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Batch conflict check completed"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "results": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                },
                                                "summary": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total_checked": {
                                                            "type": "string"
                                                        },
                                                        "conflicts_found": {
                                                            "type": "string"
                                                        },
                                                        "no_conflicts": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "total_checked",
                                                        "conflicts_found",
                                                        "no_conflicts"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "results",
                                                "summary"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/blocked-periods/export": {
            "post": {
                "operationId": "blockedPeriod.export",
                "summary": "Export blocked periods",
                "tags": [
                    "Admin - Booking Management",
                    "BlockedPeriod"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "menu_id": {
                                        "type": "string"
                                    },
                                    "start_date": {
                                        "type": "string"
                                    },
                                    "end_date": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "all_menus": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Blocked periods exported successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/blocked-periods/bulk-delete": {
            "delete": {
                "operationId": "blockedPeriod.bulkDelete",
                "summary": "Bulk delete blocked periods",
                "tags": [
                    "Admin - Booking Management",
                    "BlockedPeriod"
                ],
                "parameters": [
                    {
                        "name": "ids[]",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "deleted_count": {
                                                    "type": "integer"
                                                },
                                                "total_requested": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "deleted_count",
                                                "total_requested"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/blocked-periods/{id}": {
            "get": {
                "operationId": "blockedPeriod.show",
                "summary": "Display the specified blocked period",
                "tags": [
                    "Admin - Booking Management",
                    "BlockedPeriod"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Blocked period retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/BlockedPeriod"
                                                },
                                                {
                                                    "type": "null"
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Blocked period not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "patch": {
                "operationId": "blockedPeriod.update",
                "summary": "Update the specified blocked period",
                "tags": [
                    "Admin - Booking Management",
                    "BlockedPeriod"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BlockedPeriodRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Blocked period updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/BlockedPeriod"
                                                },
                                                {
                                                    "type": "null"
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Blocked period not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Schedule conflict detected with existing blocked periods"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "blockedPeriod.destroy",
                "summary": "Remove the specified blocked period",
                "tags": [
                    "Admin - Booking Management",
                    "BlockedPeriod"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Blocked period deleted successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Blocked period not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/announcements/statistics": {
            "get": {
                "operationId": "announcement.statistics",
                "summary": "Get announcement statistics",
                "tags": [
                    "Admin - Content Management",
                    "Announcement"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve announcement statistics"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Announcement statistics retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/announcements": {
            "get": {
                "operationId": "announcements.index",
                "summary": "List semua pengumuman (paginate / non-paginate) with filtering and search",
                "tags": [
                    "Admin - Content Management",
                    "Announcement"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ],
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "paginate",
                        "in": "query",
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "enum": [
                                "active",
                                "inactive"
                            ]
                        }
                    },
                    {
                        "name": "published_at",
                        "in": "query",
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "maxLength": 255
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve announcements"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Announcements retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "": {
                                                            "type": "string"
                                                        },
                                                        "filters_applied": {
                                                            "type": "string"
                                                        },
                                                        "total_filtered": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        null,
                                                        "filters_applied",
                                                        "total_filtered"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Announcements retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                },
                                                "cursor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "next_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "previous_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "has_next_page": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "next_cursor",
                                                        "previous_cursor",
                                                        "has_next_page",
                                                        "per_page"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data",
                                                "cursor"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "announcements.store",
                "summary": "Simpan pengumuman baru",
                "tags": [
                    "Admin - Content Management",
                    "Announcement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnnouncementRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to create announcement"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Announcement created successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AnnouncementResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/admin/announcements/{id}": {
            "get": {
                "operationId": "announcements.show",
                "summary": "Detail pengumuman",
                "tags": [
                    "Admin - Content Management",
                    "Announcement"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Announcement retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AnnouncementResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Announcement not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "announcements.update",
                "summary": "Update pengumuman",
                "tags": [
                    "Admin - Content Management",
                    "Announcement"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnnouncementRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to update announcement"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Announcement updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AnnouncementResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Announcement not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "announcements.destroy",
                "summary": "Hapus pengumuman",
                "tags": [
                    "Admin - Content Management",
                    "Announcement"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to delete announcement"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Announcement deleted successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Announcement not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/questionnaires": {
            "get": {
                "operationId": "index",
                "summary": "Get all questionnaires with cursor pagination",
                "tags": [
                    "Admin - Content Management",
                    "Questionnaire"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Paginated response with cursor",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve questionnaires"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Questionnaires retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Questionnaires retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                },
                                                "cursor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "next_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "previous_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "has_next_page": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "next_cursor",
                                                        "previous_cursor",
                                                        "has_next_page",
                                                        "per_page"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data",
                                                "cursor"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "store",
                "summary": "Store a newly created questionnaire",
                "tags": [
                    "Admin - Content Management",
                    "Questionnaire"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuestionnaireRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to create questionnaire"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid questionnaire format"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Questionnaire created successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/QuestionnaireResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/admin/questionnaires/{id}": {
            "get": {
                "operationId": "show",
                "summary": "Display the specified questionnaire - UPDATED",
                "tags": [
                    "Admin - Content Management",
                    "Questionnaire"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve questionnaire"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Questionnaire retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/QuestionnaireResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Questionnaire not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid questionnaire ID"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "update",
                "summary": "Update the specified questionnaire - UPDATED",
                "tags": [
                    "Admin - Content Management",
                    "Questionnaire"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuestionnaireRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to update questionnaire"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Invalid questionnaire format"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Invalid questionnaire ID"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Questionnaire updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/QuestionnaireResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Questionnaire not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "destroy",
                "summary": "Remove the specified questionnaire - UPDATED",
                "tags": [
                    "Admin - Content Management",
                    "Questionnaire"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to delete questionnaire"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Questionnaire deleted successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Questionnaire not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid questionnaire ID"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/questionnaires/search": {
            "get": {
                "operationId": "questionnaire.search",
                "summary": "Search questionnaires",
                "tags": [
                    "Admin - Content Management",
                    "Questionnaire"
                ],
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Search failed"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Questionnaire search completed successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "cursor": {
                                            "type": "object",
                                            "properties": {
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "previous_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "has_next_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "next_cursor",
                                                "previous_cursor",
                                                "has_next_page",
                                                "per_page"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "cursor"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/questionnaires/reservation/{reservationId}": {
            "get": {
                "operationId": "questionnaire.getByReservation",
                "summary": "Get questionnaire by reservation ID - UPDATED",
                "tags": [
                    "Admin - Content Management",
                    "Questionnaire"
                ],
                "parameters": [
                    {
                        "name": "reservationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve questionnaire"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Questionnaire retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/QuestionnaireResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Questionnaire not found for this reservation"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid reservation ID"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/questionnaires/validate-answers": {
            "post": {
                "operationId": "questionnaire.validateAnswers",
                "summary": "Validate questionnaire answers",
                "tags": [
                    "Admin - Content Management",
                    "Questionnaire"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "questions_and_answers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "question": {
                                                    "type": "string"
                                                },
                                                "answer": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "question",
                                                "answer"
                                            ]
                                        }
                                    }
                                },
                                "required": [
                                    "questions_and_answers"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to validate answers"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Questionnaire answers validated successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "valid": {
                                                    "type": "boolean"
                                                },
                                                "questions_count": {
                                                    "type": "string"
                                                },
                                                "validation_result": {
                                                    "type": "string",
                                                    "enum": [
                                                        "All answers are valid",
                                                        "Some answers are invalid"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "valid",
                                                "questions_count",
                                                "validation_result"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/questionnaires/status/{status}": {
            "get": {
                "operationId": "questionnaire.byCompletionStatus",
                "summary": "Get questionnaires by completion status - UPDATED",
                "tags": [
                    "Admin - Content Management",
                    "Questionnaire"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve questionnaires"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "cursor": {
                                            "type": "object",
                                            "properties": {
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "previous_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "has_next_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "next_cursor",
                                                "previous_cursor",
                                                "has_next_page",
                                                "per_page"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "cursor"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid completion status"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/questionnaires/completion-stats": {
            "get": {
                "operationId": "questionnaire.getCompletionStats",
                "summary": "Get questionnaire completion statistics",
                "tags": [
                    "Admin - Content Management",
                    "Questionnaire"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve statistics"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Questionnaire completion statistics retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/questionnaires/submit": {
            "post": {
                "operationId": "questionnaire.submitAnswers",
                "summary": "Submit questionnaire answers",
                "tags": [
                    "Admin - Content Management",
                    "Questionnaire"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "reservation_id": {
                                        "type": "integer"
                                    },
                                    "questions_and_answers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "question": {
                                                    "type": "string"
                                                },
                                                "answer": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "question",
                                                "answer"
                                            ]
                                        }
                                    }
                                },
                                "required": [
                                    "reservation_id",
                                    "questions_and_answers"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to submit answers"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/contacts": {
            "get": {
                "operationId": "contact.index",
                "summary": "Display a listing of contacts",
                "tags": [
                    "Admin - Content Management",
                    "Contact"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Contacts retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "contacts": {
                                                    "type": "object"
                                                },
                                                "stats": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "filters": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "contacts",
                                                "stats",
                                                "filters"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/contacts/{id}": {
            "get": {
                "operationId": "contact.show",
                "summary": "Display the specified contact",
                "tags": [
                    "Admin - Content Management",
                    "Contact"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Contact retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/Contact"
                                                },
                                                {
                                                    "type": "null"
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Contact not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "patch": {
                "operationId": "contact.update",
                "summary": "Update the specified contact",
                "tags": [
                    "Admin - Content Management",
                    "Contact"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "replied"
                                        ]
                                    },
                                    "admin_reply": {
                                        "type": "string",
                                        "maxLength": 2000
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Contact updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/Contact"
                                                },
                                                {
                                                    "type": "null"
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Contact not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "contact.destroy",
                "summary": "Remove the specified contact",
                "tags": [
                    "Admin - Content Management",
                    "Contact"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Contact deleted successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Contact not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/contacts/{id}/reply": {
            "post": {
                "operationId": "contact.reply",
                "summary": "Reply to a contact",
                "tags": [
                    "Admin - Content Management",
                    "Contact"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "admin_reply": {
                                        "type": "string",
                                        "maxLength": 2000
                                    }
                                },
                                "required": [
                                    "admin_reply"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reply sent successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Contact not found or reply failed"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/contacts/bulk-delete": {
            "delete": {
                "operationId": "contact.bulkDelete",
                "summary": "Bulk delete contacts",
                "tags": [
                    "Admin - Content Management",
                    "Contact"
                ],
                "parameters": [
                    {
                        "name": "ids[]",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Contacts deleted successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Bulk delete operation failed"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/contacts/mark-as-replied": {
            "post": {
                "operationId": "contact.markAsReplied",
                "summary": "Mark multiple contacts as replied",
                "tags": [
                    "Admin - Content Management",
                    "Contact"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "admin_reply": {
                                        "type": "string",
                                        "maxLength": 2000
                                    },
                                    "ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "required": [
                                    "admin_reply",
                                    "ids"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "updated_count": {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                },
                                                "total_count": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "updated_count",
                                                "total_count"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "No contacts were updated"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/faqs": {
            "get": {
                "operationId": "faq.index",
                "summary": "Display a listing of FAQs",
                "tags": [
                    "Admin - Content Management",
                    "Faq"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "FAQs retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "faq.store",
                "summary": "Store a newly created FAQ",
                "tags": [
                    "Admin - Content Management",
                    "Faq"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FaqRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "FAQ created successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Faq"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/admin/faqs/active": {
            "get": {
                "operationId": "faq.getActiveFaqs",
                "summary": "Get active FAQs only",
                "tags": [
                    "Admin - Content Management",
                    "Faq"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Active FAQs retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/faqs/reorder": {
            "post": {
                "operationId": "faq.reorder",
                "summary": "Reorder FAQs",
                "tags": [
                    "Admin - Content Management",
                    "Faq"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "order": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "display_order": {
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "display_order"
                                            ]
                                        }
                                    }
                                },
                                "required": [
                                    "order"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Failed to reorder FAQs"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "FAQs reordered successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/faqs/{id}": {
            "get": {
                "operationId": "faq.show",
                "summary": "Display the specified FAQ",
                "tags": [
                    "Admin - Content Management",
                    "Faq"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "FAQ retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/Faq"
                                                },
                                                {
                                                    "type": "null"
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "FAQ not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "patch": {
                "operationId": "faq.update",
                "summary": "Update the specified FAQ",
                "tags": [
                    "Admin - Content Management",
                    "Faq"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FaqRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "FAQ updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/Faq"
                                                },
                                                {
                                                    "type": "null"
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "FAQ not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "faq.destroy",
                "summary": "Remove the specified FAQ",
                "tags": [
                    "Admin - Content Management",
                    "Faq"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "FAQ deleted successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "FAQ not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/faqs/{id}/toggle-status": {
            "patch": {
                "operationId": "faq.toggleStatus",
                "summary": "Toggle FAQ status",
                "tags": [
                    "Admin - Content Management",
                    "Faq"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "FAQ status updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/Faq"
                                                },
                                                {
                                                    "type": "null"
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "FAQ not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/users/search": {
            "get": {
                "operationId": "user.search",
                "summary": "Search users - UPDATED",
                "tags": [
                    "Admin - Customer Management",
                    "User"
                ],
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Search failed"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User search completed successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "cursor": {
                                            "type": "object",
                                            "properties": {
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "previous_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "has_next_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "next_cursor",
                                                "previous_cursor",
                                                "has_next_page",
                                                "per_page"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "cursor"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "operationId": "users.index",
                "summary": "Get all users with cursor pagination - UPDATED",
                "tags": [
                    "Admin - Customer Management",
                    "User"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Paginated response with cursor",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve users"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Users retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Users retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                },
                                                "cursor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "next_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "previous_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "has_next_page": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "next_cursor",
                                                        "previous_cursor",
                                                        "has_next_page",
                                                        "per_page"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data",
                                                "cursor"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "users.store",
                "summary": "Store a newly created user",
                "tags": [
                    "Admin - Customer Management",
                    "User"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to create user"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User created successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/admin/users/{id}": {
            "get": {
                "operationId": "users.show",
                "summary": "Display the specified user",
                "tags": [
                    "Admin - Customer Management",
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve user"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "users.update",
                "summary": "Update the specified user",
                "tags": [
                    "Admin - Customer Management",
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to update user"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "users.destroy",
                "summary": "Remove the specified user",
                "tags": [
                    "Admin - Customer Management",
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to delete user"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User deleted successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/users/customers": {
            "get": {
                "operationId": "user.customers",
                "summary": "Get customers only",
                "tags": [
                    "Admin - Customer Management",
                    "User"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve users by role"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "cursor": {
                                            "type": "object",
                                            "properties": {
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "previous_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "has_next_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "next_cursor",
                                                "previous_cursor",
                                                "has_next_page",
                                                "per_page"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "cursor"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid role"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/users/admins": {
            "get": {
                "operationId": "user.admins",
                "summary": "Get admins only",
                "tags": [
                    "Admin - Customer Management",
                    "User"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve users by role"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "cursor": {
                                            "type": "object",
                                            "properties": {
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "previous_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "has_next_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "next_cursor",
                                                "previous_cursor",
                                                "has_next_page",
                                                "per_page"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "cursor"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid role"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/users/role/{role}": {
            "get": {
                "operationId": "user.byRole",
                "summary": "Get users by role - UPDATED",
                "tags": [
                    "Admin - Customer Management",
                    "User"
                ],
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve users by role"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "cursor": {
                                            "type": "object",
                                            "properties": {
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "previous_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "has_next_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "next_cursor",
                                                "previous_cursor",
                                                "has_next_page",
                                                "per_page"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "cursor"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid role"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/users/{id}/reset-password": {
            "patch": {
                "operationId": "user.resetPassword",
                "summary": "Reset user password",
                "tags": [
                    "Admin - Customer Management",
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "new_password": {
                                        "type": "string",
                                        "minLength": 8
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "minLength": 8
                                    }
                                },
                                "required": [
                                    "new_password",
                                    "new_password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to reset password"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Password reset successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/customers": {
            "get": {
                "operationId": "customer.index",
                "summary": "Display a listing of customers",
                "tags": [
                    "Admin - Customer Management",
                    "Customer"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customer_type",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Customers retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "customers": {
                                                    "type": "object"
                                                },
                                                "customer_type_counts": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "filters": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                }
                                            },
                                            "required": [
                                                "customers",
                                                "customer_type_counts",
                                                "filters"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/customers/first-time": {
            "get": {
                "operationId": "customer.getFirstTimeCustomers",
                "summary": "Get first time customers",
                "tags": [
                    "Admin - Customer Management",
                    "Customer"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "First time customers retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/customers/repeat-customers": {
            "get": {
                "operationId": "customer.getRepeatCustomers",
                "summary": "Get repeat customers",
                "tags": [
                    "Admin - Customer Management",
                    "Customer"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Repeat customers retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/customers/dormant-customers": {
            "get": {
                "operationId": "customer.getDormantCustomers",
                "summary": "Get dormant customers",
                "tags": [
                    "Admin - Customer Management",
                    "Customer"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Dormant customers retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/customers/search": {
            "get": {
                "operationId": "customer.search",
                "summary": "Search customers",
                "tags": [
                    "Admin - Customer Management",
                    "Customer"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Customer search completed successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/customers/type-counts": {
            "get": {
                "operationId": "customer.getCustomerTypeCounts",
                "summary": "Get customer type counts",
                "tags": [
                    "Admin - Customer Management",
                    "Customer"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Customer type counts retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/customers/{id}": {
            "get": {
                "operationId": "customer.show",
                "summary": "Display the specified customer",
                "tags": [
                    "Admin - Customer Management",
                    "Customer"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Customer details retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": [
                                                "array",
                                                "null"
                                            ],
                                            "items": {}
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Customer not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/dashboard": {
            "get": {
                "operationId": "dashboard.index",
                "summary": "Get admin dashboard data with locale-filtered translations",
                "tags": [
                    "Admin - Dashboard",
                    "Dashboard"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Dashboard data retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "announcements": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/AnnouncementResource"
                                                    }
                                                },
                                                "today_reservations": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ReservationResource"
                                                    }
                                                },
                                                "pending_contacts_count": {
                                                    "type": "string"
                                                },
                                                "pending_contacts": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ContactResource"
                                                    }
                                                },
                                                "monthly_reservations": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ReservationResource"
                                                    }
                                                },
                                                "statistics": {
                                                    "type": "object",
                                                    "properties": {
                                                        "new_customers_this_month": {
                                                            "type": "string"
                                                        },
                                                        "online_reservations_this_month": {
                                                            "type": "string"
                                                        },
                                                        "total_customers": {
                                                            "type": "string"
                                                        },
                                                        "customers_until_limit": {
                                                            "type": "string"
                                                        },
                                                        "customer_limit": {
                                                            "type": "integer",
                                                            "enum": [
                                                                100
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "new_customers_this_month",
                                                        "online_reservations_this_month",
                                                        "total_customers",
                                                        "customers_until_limit",
                                                        "customer_limit"
                                                    ]
                                                },
                                                "last_login": {
                                                    "type": "string"
                                                },
                                                "current_month": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "announcements",
                                                "today_reservations",
                                                "pending_contacts_count",
                                                "pending_contacts",
                                                "monthly_reservations",
                                                "statistics",
                                                "last_login",
                                                "current_month"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/profile": {
            "get": {
                "operationId": "profile.show",
                "summary": "Get current user profile",
                "tags": [
                    "Admin - Profile",
                    "Profile"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve profile"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Profile retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "patch": {
                "operationId": "profile.update",
                "summary": "Update current user profile",
                "tags": [
                    "Admin - Profile",
                    "Profile"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "full_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "full_name_kana": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "maxLength": 20
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "company_name": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "department": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "company_address": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 500
                                    },
                                    "home_address": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 500
                                    },
                                    "date_of_birth": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "date-time"
                                    },
                                    "gender": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ]
                                    }
                                },
                                "required": [
                                    "full_name",
                                    "full_name_kana",
                                    "phone_number",
                                    "email"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to update profile"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Profile updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/profile/password": {
            "patch": {
                "operationId": "profile.updatePassword",
                "summary": "Update current user password",
                "tags": [
                    "Admin - Profile",
                    "Profile"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "current_password": {
                                        "type": "string"
                                    },
                                    "new_password": {
                                        "type": "string"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "current_password",
                                    "new_password",
                                    "new_password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to update password"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Password updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/profile/reservations": {
            "get": {
                "operationId": "profile.reservations",
                "summary": "Get user's reservations",
                "tags": [
                    "Admin - Profile",
                    "Profile"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve reservations"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "User reservations retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "User reservations retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                },
                                                "cursor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "next_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "previous_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "has_next_page": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "next_cursor",
                                                        "previous_cursor",
                                                        "has_next_page",
                                                        "per_page"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data",
                                                "cursor"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/profile/account": {
            "delete": {
                "operationId": "profile.deleteAccount",
                "summary": "Delete current user account",
                "tags": [
                    "Admin - Profile",
                    "Profile"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to delete account"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Account deleted successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/business-settings": {
            "get": {
                "operationId": "businessSetting.index",
                "summary": "Display business settings",
                "tags": [
                    "Admin - System Settings",
                    "BusinessSetting"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Business settings retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "$ref": "#/components/schemas/BusinessSettingResource"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "No business settings found"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "null"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/business-settings/business-hours": {
            "get": {
                "operationId": "businessSetting.getBusinessHours",
                "summary": "Get business hours",
                "tags": [
                    "Admin - System Settings",
                    "BusinessSetting"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Business hours retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "business_hours": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "business_hours"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "patch": {
                "operationId": "businessSetting.updateBusinessHours",
                "summary": "Update business hours only",
                "tags": [
                    "Admin - System Settings",
                    "BusinessSetting"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "business_hours": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "business_hours"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Business hours updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BusinessSettingResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/business-settings/top-image": {
            "get": {
                "operationId": "businessSetting.getTopImage",
                "summary": "Get top image URL",
                "tags": [
                    "Admin - System Settings",
                    "BusinessSetting"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Top image URL retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "top_image_url": {
                                                    "type": "string"
                                                },
                                                "top_image_path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "top_image_url",
                                                "top_image_path"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/business-settings/update": {
            "patch": {
                "operationId": "businessSetting.update",
                "summary": "Update business settings",
                "tags": [
                    "Admin - System Settings",
                    "BusinessSetting"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BusinessSettingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Business settings updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BusinessSettingResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "operationId": "auth.login",
                "tags": [
                    "Authentication",
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Email atau password salah"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Login berhasil"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "anyOf": [
                                                        {
                                                            "$ref": "#/components/schemas/User"
                                                        },
                                                        {
                                                            "type": "null"
                                                        }
                                                    ]
                                                },
                                                "token": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "user",
                                                "token"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "operationId": "auth.register",
                "tags": [
                    "Authentication",
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Registrasi berhasil"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "token": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "user",
                                                "token"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "operationId": "auth.forgotPassword",
                "tags": [
                    "Authentication",
                    "Auth"
                ],
                "responses": {
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Email tidak ditemukan"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Link reset password dikirim ke email"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "operationId": "auth.resetPassword",
                "tags": [
                    "Authentication",
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Token tidak valid atau sudah expired"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Password berhasil direset"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "operationId": "auth.logout",
                "tags": [
                    "Authentication",
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Logout berhasil"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/profile": {
            "get": {
                "operationId": "customer.profile",
                "summary": "Get customer profile",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "patch": {
                "operationId": "customer.updateProfile",
                "summary": "Update customer profile",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "full_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "full_name_kana": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "maxLength": 20
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "company_name": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "department": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "company_address": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 500
                                    },
                                    "home_address": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 500
                                    },
                                    "date_of_birth": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "date-time"
                                    },
                                    "gender": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ]
                                    }
                                },
                                "required": [
                                    "full_name",
                                    "full_name_kana",
                                    "phone_number",
                                    "email"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/change-password": {
            "patch": {
                "operationId": "customer.changePassword",
                "summary": "Change customer password",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "current_password": {
                                        "type": "string"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "minLength": 8
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "minLength": 8
                                    }
                                },
                                "required": [
                                    "current_password",
                                    "new_password",
                                    "new_password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to change password"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Password changed successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid current password"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/account": {
            "delete": {
                "operationId": "customer.deleteAccount",
                "summary": "Delete customer account",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to delete account"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Account deleted successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/dashboard": {
            "get": {
                "operationId": "customer.dashboard",
                "summary": "Get customer dashboard summary",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve dashboard"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Customer dashboard retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "summary": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total_reservations": {
                                                            "type": "integer"
                                                        },
                                                        "pending_reservations": {
                                                            "type": "integer"
                                                        },
                                                        "completed_reservations": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "total_reservations",
                                                        "pending_reservations",
                                                        "completed_reservations"
                                                    ]
                                                },
                                                "recent_reservations": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "summary",
                                                "recent_reservations"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/booking/first-step/{menuId}": {
            "get": {
                "operationId": "customer.bookingFirstStep",
                "summary": "Get booking first step data (menu and calendar)",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "parameters": [
                    {
                        "name": "menuId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve booking data"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Booking first step data retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "menu": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "required_time": {
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "type": "string"
                                                        },
                                                        "price": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "name",
                                                        "required_time",
                                                        "description",
                                                        "price"
                                                    ]
                                                },
                                                "calendar_data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "days": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "minItems": 0,
                                                            "maxItems": 0,
                                                            "additionalItems": false
                                                        },
                                                        "current_month": {
                                                            "type": "string"
                                                        },
                                                        "previous_month": {
                                                            "type": "string"
                                                        },
                                                        "next_month": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "days",
                                                        "current_month",
                                                        "previous_month",
                                                        "next_month"
                                                    ]
                                                },
                                                "current_month": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "menu",
                                                "calendar_data",
                                                "current_month"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menu not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid menu ID"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/booking/calendar-data": {
            "get": {
                "operationId": "customer.getCalendarData",
                "summary": "Get calendar data for booking",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "parameters": [
                    {
                        "name": "month",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "menu_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve calendar data"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Calendar data retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "current_month": {
                                                    "type": "string"
                                                },
                                                "previous_month": {
                                                    "type": "string"
                                                },
                                                "next_month": {
                                                    "type": "string"
                                                },
                                                "days": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_month",
                                                "previous_month",
                                                "next_month",
                                                "days"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Invalid month format"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Menu ID is required"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/booking/available-hours": {
            "get": {
                "operationId": "customer.getAvailableHours",
                "summary": "Get available hours for a specific date and menu",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "menu_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve available hours"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Available hours retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "hours": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "minItems": 0,
                                                            "maxItems": 0,
                                                            "additionalItems": false
                                                        }
                                                    },
                                                    "required": [
                                                        "hours"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "No available hours for past dates"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "hours": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "minItems": 0,
                                                            "maxItems": 0,
                                                            "additionalItems": false
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "enum": [
                                                                "Cannot book for past dates"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "hours",
                                                        "message"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Invalid date format"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Date and menu_id are required"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/booking/menu-details/{menuId}": {
            "get": {
                "operationId": "customer.getMenuDetails",
                "summary": "Get menu details for booking",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "parameters": [
                    {
                        "name": "menuId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve menu details"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menu details retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "menu": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "required_time": {
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "type": "string"
                                                        },
                                                        "price": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "name",
                                                        "required_time",
                                                        "description",
                                                        "price"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "menu"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menu not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid menu ID"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/booking/create-reservation": {
            "post": {
                "operationId": "customer.createReservation",
                "summary": "Create a new reservation (booking)",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReservationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to create reservation"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reservation created successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ReservationResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/reservations": {
            "get": {
                "operationId": "customer.reservations",
                "summary": "Get customer reservations",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 10
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/reservations/summary": {
            "get": {
                "operationId": "customer.reservationsSummary",
                "summary": "Get customer reservations summary by status",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve reservations summary"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Customer reservations summary retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "pending": {
                                                    "type": "integer"
                                                },
                                                "confirmed": {
                                                    "type": "integer"
                                                },
                                                "completed": {
                                                    "type": "integer"
                                                },
                                                "cancelled": {
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "total",
                                                "pending",
                                                "confirmed",
                                                "completed",
                                                "cancelled"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/reservations/pending": {
            "get": {
                "operationId": "customer.pendingReservations",
                "summary": "Get customer pending reservations",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve reservations by status"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Invalid status parameter"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Invalid status"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "type": "string"
                                                },
                                                "cursor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "next_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "previous_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "has_next_page": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "next_cursor",
                                                        "previous_cursor",
                                                        "has_next_page",
                                                        "per_page"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data",
                                                "cursor"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/reservations/completed": {
            "get": {
                "operationId": "customer.completedReservations",
                "summary": "Get customer completed reservations",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve reservations by status"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Invalid status parameter"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Invalid status"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "type": "string"
                                                },
                                                "cursor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "next_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "previous_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "has_next_page": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "next_cursor",
                                                        "previous_cursor",
                                                        "has_next_page",
                                                        "per_page"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data",
                                                "cursor"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/reservations/status/{status}": {
            "get": {
                "operationId": "customer.reservationsByStatus",
                "summary": "Get customer reservations by status",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve reservations by status"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Invalid status parameter"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Invalid status"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "type": "string"
                                                },
                                                "cursor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "next_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "previous_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "has_next_page": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "next_cursor",
                                                        "previous_cursor",
                                                        "has_next_page",
                                                        "per_page"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data",
                                                "cursor"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/reservations/availability": {
            "get": {
                "operationId": "customer.getAvailability",
                "summary": "Get availability data for date range",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "parameters": [
                    {
                        "name": "menu_id",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "exclude_reservation_id",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "minItems": 0,
                                            "maxItems": 0,
                                            "additionalItems": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Availability data retrieved successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "data",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/reservations/check-availability": {
            "post": {
                "operationId": "customer.checkAvailability",
                "summary": "Check availability for specific datetime",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "menu_id": {
                                        "type": "integer"
                                    },
                                    "reservation_datetime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "exclude_reservation_id": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "menu_id",
                                    "reservation_datetime"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Availability check completed"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "available": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Time slot is available",
                                                        "Time slot is not available"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "available",
                                                "message"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/reservations/{id}": {
            "get": {
                "operationId": "customer.reservation",
                "summary": "Get specific customer reservation",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve reservation"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reservation retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ReservationResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reservation not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid reservation ID"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/inquiry": {
            "post": {
                "operationId": "customer.submitInquiry",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to submit inquiry"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Thank you for your inquiry! We will get back to you soon."
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "inquiry_id": {
                                                    "type": "integer"
                                                },
                                                "reference_number": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "inquiry_id",
                                                "reference_number"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/inquiry-history": {
            "get": {
                "operationId": "customer.getInquiryHistory",
                "summary": "Get customer inquiry history",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve inquiry history"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Customer inquiry history retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/tire-storage": {
            "get": {
                "operationId": "customer.tireStorage",
                "summary": "Get customer tire storage",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 10
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve tire storage"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Customer tire storage retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Customer tire storage retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                },
                                                "cursor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "next_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "previous_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "has_next_page": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "next_cursor",
                                                        "previous_cursor",
                                                        "has_next_page",
                                                        "per_page"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data",
                                                "cursor"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "customer.createTireStorage",
                "summary": "Create new tire storage entry",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tire_brand": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "tire_size": {
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "tire_type": {
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 10
                                    },
                                    "storage_period_months": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 24
                                    },
                                    "notes": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 1000
                                    },
                                    "pickup_date": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "date-time"
                                    }
                                },
                                "required": [
                                    "tire_brand",
                                    "tire_size",
                                    "tire_type",
                                    "quantity",
                                    "storage_period_months"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to create tire storage"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Tire storage entry created successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TireStorageResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/tire-storage/summary": {
            "get": {
                "operationId": "customer.getTireStorageSummary",
                "summary": "Get tire storage summary/statistics",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve tire storage summary"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Tire storage summary retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "total_storage_entries": {
                                                    "type": "integer"
                                                },
                                                "active_storage": {
                                                    "type": "integer"
                                                },
                                                "pickup_requested": {
                                                    "type": "integer"
                                                },
                                                "completed_storage": {
                                                    "type": "integer"
                                                },
                                                "total_tires_stored": {
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "total_storage_entries",
                                                "active_storage",
                                                "pickup_requested",
                                                "completed_storage",
                                                "total_tires_stored"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/tire-storage/{id}": {
            "get": {
                "operationId": "customer.tireStorageItem",
                "summary": "Get specific customer tire storage",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve tire storage"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Tire storage retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TireStorageResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Tire storage not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid tire storage ID"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "patch": {
                "operationId": "customer.updateTireStorage",
                "summary": "Update tire storage entry",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tire_brand": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "tire_size": {
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "tire_type": {
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 10
                                    },
                                    "storage_period_months": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 24
                                    },
                                    "notes": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 1000
                                    },
                                    "pickup_date": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to update tire storage"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Tire storage updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TireStorageResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Tire storage not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid tire storage ID"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/tire-storage/{id}/pickup": {
            "post": {
                "operationId": "customer.requestTirePickup",
                "summary": "Request tire pickup",
                "tags": [
                    "Customer - Booking",
                    "Customer"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "pickup_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "pickup_notes": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 500
                                    }
                                },
                                "required": [
                                    "pickup_date"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to request tire pickup"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Tire pickup requested successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TireStorageResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Tire storage not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid tire storage ID"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/public/menus": {
            "get": {
                "operationId": "menu.index_0",
                "tags": [
                    "Public",
                    "Admin",
                    "Menu"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "paginate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ]
                        }
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ja"
                            ]
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve menus"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Menus retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Menus retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                },
                                                "cursor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "next_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "previous_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "has_next_page": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "next_cursor",
                                                        "previous_cursor",
                                                        "has_next_page",
                                                        "per_page"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data",
                                                "cursor"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/public/menus/{id}": {
            "get": {
                "operationId": "menu.show_0",
                "tags": [
                    "Public",
                    "Admin",
                    "Menu"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve menu"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menu retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MenuResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menu not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/public/inquiry": {
            "post": {
                "operationId": "contact.submitInquiry",
                "summary": "Submit inquiry form (Public route with auto-fill for authenticated users)",
                "tags": [
                    "Public",
                    "Contact"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to submit inquiry"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Thank you for your inquiry! We will get back to you soon."
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "inquiry_id": {
                                                    "type": "integer"
                                                },
                                                "reference_number": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "inquiry_id",
                                                "reference_number"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customer/menus": {
            "get": {
                "operationId": "menu.index_0",
                "tags": [
                    "Public",
                    "Admin",
                    "Menu"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "paginate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ]
                        }
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ja"
                            ]
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve menus"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Menus retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Menus retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                },
                                                "cursor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "next_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "previous_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "has_next_page": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "next_cursor",
                                                        "previous_cursor",
                                                        "has_next_page",
                                                        "per_page"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data",
                                                "cursor"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/menus/calculate-end-time": {
            "post": {
                "operationId": "menu.calculateEndTime_0",
                "tags": [
                    "Public",
                    "Admin",
                    "Menu"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "menu_id": {
                                        "type": "integer"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "required": [
                                    "menu_id",
                                    "start_time"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Error calculating end time"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "End time calculated successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "menu_id": {
                                                    "type": "string"
                                                },
                                                "start_time": {
                                                    "type": "string"
                                                },
                                                "end_time": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "menu_id",
                                                "start_time",
                                                "end_time"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to calculate end time"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/menus/{id}": {
            "get": {
                "operationId": "menu.show_0",
                "tags": [
                    "Public",
                    "Admin",
                    "Menu"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve menu"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menu retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MenuResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menu not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/customer/menus/{id}/available-slots": {
            "get": {
                "operationId": "menu.getAvailableSlots_0",
                "tags": [
                    "Public",
                    "Admin",
                    "Menu"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "menu_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Error retrieving time slots"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Available time slots retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "menu_id": {
                                                    "type": "string"
                                                },
                                                "date": {
                                                    "type": "string"
                                                },
                                                "slots": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "total_slots": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "menu_id",
                                                "date",
                                                "slots",
                                                "total_slots"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/menus": {
            "get": {
                "operationId": "menus.index",
                "tags": [
                    "Public",
                    "Admin",
                    "Menu"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "paginate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ]
                        }
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ja"
                            ]
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve menus"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Menus retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Menus retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                },
                                                "cursor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "next_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "previous_cursor": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "has_next_page": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "next_cursor",
                                                        "previous_cursor",
                                                        "has_next_page",
                                                        "per_page"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data",
                                                "cursor"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "menus.store",
                "tags": [
                    "Public",
                    "Admin",
                    "Menu"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MenuRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to create menu"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menu created successfully with English and Japanese support."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MenuResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/admin/menus/{id}": {
            "get": {
                "operationId": "menus.show",
                "tags": [
                    "Public",
                    "Admin",
                    "Menu"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve menu"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menu retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MenuResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menu not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "menus.update",
                "tags": [
                    "Public",
                    "Admin",
                    "Menu"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MenuRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to update menu"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menu updated successfully with multilingual support."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MenuResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menu not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "menus.destroy",
                "tags": [
                    "Public",
                    "Admin",
                    "Menu"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to delete menu"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menu deleted successfully."
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menu not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/menus/{id}/toggle-status": {
            "patch": {
                "operationId": "menu.toggleStatus",
                "tags": [
                    "Public",
                    "Admin",
                    "Menu"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to toggle menu status"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menu status changed successfully."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MenuResource"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menu not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/menus/bulk-delete": {
            "delete": {
                "operationId": "menu.bulkDelete",
                "tags": [
                    "Public",
                    "Admin",
                    "Menu"
                ],
                "parameters": [
                    {
                        "name": "ids[]",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to bulk delete menus"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menus successfully deleted in bulk."
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "deleted_ids": {
                                                    "type": "string"
                                                },
                                                "deleted_count": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "deleted_ids",
                                                "deleted_count"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "No menus were successfully deleted"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/menus/bulk-update-status": {
            "patch": {
                "operationId": "menu.bulkUpdateStatus",
                "tags": [
                    "Public",
                    "Admin",
                    "Menu"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "boolean"
                                    },
                                    "ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "required": [
                                    "status",
                                    "ids"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Failed to bulk update status"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "error"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Failed to update menu status"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menu status updated successfully for all selected menus."
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "updated_ids": {
                                                    "type": "string"
                                                },
                                                "updated_count": {
                                                    "type": "string"
                                                },
                                                "new_status": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "updated_ids",
                                                "updated_count",
                                                "new_status"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/menus/calculate-end-time": {
            "post": {
                "operationId": "menu.calculateEndTime_0",
                "tags": [
                    "Public",
                    "Admin",
                    "Menu"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "menu_id": {
                                        "type": "integer"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "required": [
                                    "menu_id",
                                    "start_time"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Error calculating end time"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "End time calculated successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "menu_id": {
                                                    "type": "string"
                                                },
                                                "start_time": {
                                                    "type": "string"
                                                },
                                                "end_time": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "menu_id",
                                                "start_time",
                                                "end_time"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to calculate end time"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/menus/{id}/available-slots": {
            "get": {
                "operationId": "menu.getAvailableSlots_0",
                "tags": [
                    "Public",
                    "Admin",
                    "Menu"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "menu_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Error retrieving time slots"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Available time slots retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "menu_id": {
                                                    "type": "string"
                                                },
                                                "date": {
                                                    "type": "string"
                                                },
                                                "slots": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "total_slots": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "menu_id",
                                                "date",
                                                "slots",
                                                "total_slots"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/menus/reorder": {
            "post": {
                "operationId": "menu.reorder",
                "summary": "Reorder menus (admin only)",
                "tags": [
                    "Public",
                    "Admin",
                    "Menu"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "order": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "display_order": {
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "display_order"
                                            ]
                                        }
                                    }
                                },
                                "required": [
                                    "order"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to reorder menus"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Menus reordered successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "reordered_count": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "reordered_count"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "http": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "sanctum"
            }
        },
        "schemas": {
            "AnnouncementRequest": {
                "type": "object",
                "properties": {
                    "is_active": {
                        "type": "boolean"
                    },
                    "published_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "translations": {
                        "type": "object",
                        "properties": {
                            "en": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "content": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "title",
                                    "content"
                                ]
                            },
                            "ja": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "content": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "title",
                                    "content"
                                ]
                            }
                        }
                    }
                },
                "title": "AnnouncementRequest"
            },
            "AnnouncementResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "start_date": {
                        "type": "string"
                    },
                    "end_date": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "published_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "translations": {
                        "type": "string",
                        "description": "Always include all translations"
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "locale": {
                                "type": "string"
                            },
                            "fallback_used": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "locale",
                            "fallback_used"
                        ]
                    }
                },
                "required": [
                    "id",
                    "title",
                    "content",
                    "start_date",
                    "end_date",
                    "is_active",
                    "published_at",
                    "created_at",
                    "updated_at",
                    "translations",
                    "meta"
                ],
                "title": "AnnouncementResource"
            },
            "BlockedPeriod": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "menu_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "start_datetime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_datetime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "all_menus": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "menu_id",
                    "start_datetime",
                    "end_datetime",
                    "reason",
                    "all_menus",
                    "created_at",
                    "updated_at"
                ],
                "title": "BlockedPeriod"
            },
            "BlockedPeriodRequest": {
                "type": "object",
                "properties": {
                    "menu_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "start_datetime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_datetime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "reason": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 500
                    },
                    "all_menus": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "start_datetime",
                    "end_datetime",
                    "reason"
                ],
                "title": "BlockedPeriodRequest"
            },
            "BusinessSettingRequest": {
                "type": "object",
                "properties": {
                    "shop_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "phone_number": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "address": {
                        "type": "string"
                    },
                    "access_information": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "website_url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "maxLength": 255
                    },
                    "site_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "shop_description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "top_image": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "binary",
                        "contentMediaType": "application/octet-stream",
                        "maxLength": 2048
                    },
                    "site_public": {
                        "type": "boolean"
                    },
                    "reply_email": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email",
                        "maxLength": 255
                    },
                    "terms_of_use": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "privacy_policy": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "google_analytics_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "business_hours": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "closed": {
                                    "type": "boolean"
                                },
                                "open": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "format": "date"
                                },
                                "close": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "format": "date"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "shop_name",
                    "phone_number",
                    "address",
                    "business_hours"
                ],
                "title": "BusinessSettingRequest"
            },
            "BusinessSettingResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "shop_name": {
                        "type": "string"
                    },
                    "site_name": {
                        "type": "string"
                    },
                    "shop_description": {
                        "type": "string"
                    },
                    "access_information": {
                        "type": "string"
                    },
                    "terms_of_use": {
                        "type": "string"
                    },
                    "privacy_policy": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string"
                    },
                    "business_hours": {
                        "type": "array",
                        "items": {}
                    },
                    "website_url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "top_image_path": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "top_image_url": {
                        "type": "string"
                    },
                    "site_public": {
                        "type": "boolean"
                    },
                    "reply_email": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "google_analytics_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "shop_name",
                    "site_name",
                    "shop_description",
                    "access_information",
                    "terms_of_use",
                    "privacy_policy",
                    "address",
                    "phone_number",
                    "business_hours",
                    "website_url",
                    "top_image_path",
                    "top_image_url",
                    "site_public",
                    "reply_email",
                    "google_analytics_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "BusinessSettingResource"
            },
            "Contact": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "full_name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "email": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "phone_number": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "subject": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ContactStatus"
                    },
                    "admin_reply": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "replied_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "user_id",
                    "full_name",
                    "email",
                    "phone_number",
                    "subject",
                    "message",
                    "status",
                    "admin_reply",
                    "replied_at",
                    "created_at",
                    "updated_at"
                ],
                "title": "Contact"
            },
            "ContactResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "full_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ContactStatus"
                    },
                    "admin_reply": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "replied_at": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "user": {
                        "type": "object",
                        "description": "User relation (only include if loaded)",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "full_name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "phone_number": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "full_name",
                            "email",
                            "phone_number"
                        ]
                    }
                },
                "required": [
                    "id",
                    "full_name",
                    "email",
                    "phone_number",
                    "subject",
                    "message",
                    "status",
                    "admin_reply",
                    "replied_at",
                    "created_at",
                    "updated_at"
                ],
                "title": "ContactResource"
            },
            "ContactStatus": {
                "type": "string",
                "enum": [
                    "pending",
                    "replied"
                ],
                "title": "ContactStatus"
            },
            "Faq": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "question": {
                        "type": "string"
                    },
                    "answer": {
                        "type": "string"
                    },
                    "display_order": {
                        "type": "integer"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "question",
                    "answer",
                    "display_order",
                    "is_active",
                    "created_at",
                    "updated_at"
                ],
                "title": "Faq"
            },
            "FaqRequest": {
                "type": "object",
                "properties": {
                    "question": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "answer": {
                        "type": "string"
                    },
                    "display_order": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "question",
                    "answer"
                ],
                "title": "FaqRequest"
            },
            "Gender": {
                "type": "string",
                "enum": [
                    "male",
                    "female",
                    "other"
                ],
                "title": "Gender"
            },
            "LoginRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8
                    }
                },
                "required": [
                    "email",
                    "password"
                ],
                "title": "LoginRequest"
            },
            "MenuRequest": {
                "type": "object",
                "properties": {
                    "required_time": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "price": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "minimum": 0
                    },
                    "photo_path": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "display_order": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "color": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "translations": {
                        "type": "object",
                        "properties": {
                            "en": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            },
                            "ja": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "required": [
                    "required_time"
                ],
                "title": "MenuRequest"
            },
            "MenuResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "required_time": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "object",
                        "properties": {
                            "amount": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "formatted": {
                                "type": "string"
                            },
                            "currency": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "amount",
                            "formatted",
                            "currency"
                        ]
                    },
                    "photo_path": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "display_order": {
                        "type": "integer"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "color": {
                        "type": "object",
                        "properties": {
                            "hex": {
                                "type": "string"
                            },
                            "rgba_light": {
                                "type": "string"
                            },
                            "text_color": {
                                "type": "string",
                                "enum": [
                                    "#000000",
                                    "#ffffff"
                                ]
                            }
                        },
                        "required": [
                            "hex",
                            "rgba_light",
                            "text_color"
                        ]
                    },
                    "translations": {
                        "type": "string"
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "locale": {
                                "type": "string"
                            },
                            "fallback_used": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "locale",
                            "fallback_used"
                        ]
                    }
                },
                "required": [
                    "id",
                    "name",
                    "description",
                    "required_time",
                    "price",
                    "photo_path",
                    "display_order",
                    "is_active",
                    "color",
                    "meta"
                ],
                "title": "MenuResource"
            },
            "QuestionnaireRequest": {
                "type": "object",
                "properties": {
                    "reservation_id": {
                        "type": "integer"
                    },
                    "questions_and_answers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "question": {
                                    "type": "string"
                                },
                                "answer": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "question",
                                "answer"
                            ]
                        }
                    }
                },
                "required": [
                    "reservation_id",
                    "questions_and_answers"
                ],
                "title": "QuestionnaireRequest"
            },
            "QuestionnaireResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "reservation_id": {
                        "type": "integer"
                    },
                    "questions_and_answers": {
                        "type": "array",
                        "items": {}
                    },
                    "total_questions": {
                        "type": "string"
                    },
                    "answered_questions": {
                        "type": "integer"
                    },
                    "completion_rate": {
                        "type": "number"
                    },
                    "reservation": {
                        "description": "Relations",
                        "$ref": "#/components/schemas/ReservationResource"
                    },
                    "created_at": {
                        "type": "string",
                        "description": "Timestamps"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "reservation_id",
                    "questions_and_answers",
                    "total_questions",
                    "answered_questions",
                    "completion_rate",
                    "created_at",
                    "updated_at"
                ],
                "title": "QuestionnaireResource"
            },
            "ReservationRequest": {
                "type": "object",
                "properties": {
                    "reservation_number": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "user_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "menu_id": {
                        "type": "integer"
                    },
                    "reservation_datetime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "number_of_people": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "amount": {
                        "type": "number",
                        "minimum": 0
                    },
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "enum": [
                            "pending",
                            "confirmed",
                            "completed",
                            "cancelled"
                        ]
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "customer_type": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Customer type validation - auto-detect if not provided",
                        "enum": [
                            "existing",
                            "guest"
                        ]
                    },
                    "full_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Guest customer fields - only required when customer_type is explicitly provided as 'guest'",
                        "maxLength": 255
                    },
                    "full_name_kana": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "email": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email",
                        "maxLength": 255
                    },
                    "phone_number": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 20
                    }
                },
                "required": [
                    "menu_id",
                    "reservation_datetime",
                    "number_of_people",
                    "amount"
                ],
                "title": "ReservationRequest"
            },
            "ReservationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "reservation_number": {
                        "type": "string"
                    },
                    "reservation_datetime": {
                        "type": "string"
                    },
                    "number_of_people": {
                        "type": "integer"
                    },
                    "amount": {
                        "type": "object",
                        "properties": {
                            "raw": {
                                "type": "string"
                            },
                            "formatted": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "raw",
                            "formatted"
                        ]
                    },
                    "status": {
                        "$ref": "#/components/schemas/ReservationStatus"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "customer_info": {
                        "type": "object",
                        "description": "Customer Information",
                        "properties": {
                            "full_name": {
                                "type": "string"
                            },
                            "full_name_kana": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "phone_number": {
                                "type": "string"
                            },
                            "is_guest": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "full_name",
                            "full_name_kana",
                            "email",
                            "phone_number",
                            "is_guest"
                        ]
                    },
                    "user": {
                        "type": "object",
                        "description": "Relations (only include if loaded)",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "full_name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "phone_number": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "full_name",
                            "email",
                            "phone_number"
                        ]
                    },
                    "menu": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "required_time": {
                                "type": "integer"
                            },
                            "price": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "color": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "name",
                            "description",
                            "required_time",
                            "price",
                            "color"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "description": "Timestamps"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "reservation_number",
                    "reservation_datetime",
                    "number_of_people",
                    "amount",
                    "status",
                    "notes",
                    "customer_info",
                    "created_at",
                    "updated_at"
                ],
                "title": "ReservationResource"
            },
            "ReservationStatus": {
                "type": "string",
                "enum": [
                    "pending",
                    "confirmed",
                    "completed",
                    "cancelled"
                ],
                "title": "ReservationStatus"
            },
            "ResetPasswordRequest": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8
                    },
                    "password_confirmation": {
                        "type": "string",
                        "minLength": 8
                    }
                },
                "required": [
                    "token",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "title": "ResetPasswordRequest"
            },
            "TireStorageRequest": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "integer"
                    },
                    "tire_brand": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "tire_size": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "storage_start_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "planned_end_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "storage_fee": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "minimum": 0
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "ended"
                        ]
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "user_id",
                    "tire_brand",
                    "tire_size",
                    "storage_start_date",
                    "planned_end_date"
                ],
                "title": "TireStorageRequest"
            },
            "TireStorageResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "name",
                            "email"
                        ]
                    },
                    "tire_brand": {
                        "type": "string"
                    },
                    "tire_size": {
                        "type": "string"
                    },
                    "storage_start_date": {
                        "type": "string"
                    },
                    "planned_end_date": {
                        "type": "string"
                    },
                    "storage_fee": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "status": {
                        "type": "string"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "enum cast ke string/value"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "user",
                    "tire_brand",
                    "tire_size",
                    "storage_start_date",
                    "planned_end_date",
                    "storage_fee",
                    "status",
                    "notes",
                    "created_at",
                    "updated_at"
                ],
                "title": "TireStorageResource"
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "email": {
                        "type": "string"
                    },
                    "email_verified_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "full_name": {
                        "type": "string"
                    },
                    "full_name_kana": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string"
                    },
                    "company_name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "department": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "company_address": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "home_address": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "date_of_birth": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "gender": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Gender"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "email",
                    "email_verified_at",
                    "full_name",
                    "full_name_kana",
                    "phone_number",
                    "company_name",
                    "department",
                    "company_address",
                    "home_address",
                    "date_of_birth",
                    "gender",
                    "role",
                    "created_at",
                    "updated_at"
                ],
                "title": "User"
            },
            "UserRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8
                    },
                    "full_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "full_name_kana": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "phone_number": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "company_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "department": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "company_address": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "home_address": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "date_of_birth": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "gender": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "enum": [
                            "male",
                            "female",
                            "other"
                        ]
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "customer",
                            "admin"
                        ]
                    },
                    "password_confirmation": {
                        "type": "string",
                        "minLength": 8
                    }
                },
                "required": [
                    "email",
                    "password",
                    "full_name",
                    "full_name_kana",
                    "phone_number",
                    "password_confirmation"
                ],
                "title": "UserRequest"
            },
            "UserResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "email": {
                        "type": "string"
                    },
                    "full_name": {
                        "type": "string"
                    },
                    "full_name_kana": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string"
                    },
                    "company_name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "department": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "company_address": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "home_address": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "date_of_birth": {
                        "type": "string"
                    },
                    "gender": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Gender"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "role": {
                        "type": "string"
                    },
                    "is_admin": {
                        "type": "boolean"
                    },
                    "is_customer": {
                        "type": "boolean"
                    },
                    "email_verified_at": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "reservations_count": {
                        "type": "integer",
                        "description": "Conditional data"
                    },
                    "tire_storage_count": {
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "email",
                    "full_name",
                    "full_name_kana",
                    "phone_number",
                    "company_name",
                    "department",
                    "company_address",
                    "home_address",
                    "date_of_birth",
                    "gender",
                    "role",
                    "is_admin",
                    "is_customer",
                    "email_verified_at",
                    "created_at",
                    "updated_at"
                ],
                "title": "UserResource"
            },
            "UserRole": {
                "type": "string",
                "enum": [
                    "customer",
                    "admin"
                ],
                "title": "UserRole"
            }
        },
        "responses": {
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "AuthenticationException": {
                "description": "Unauthenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}